version: '3'

services:
 web:
   restart: always
   build: ./cookiecutter_mbam
   image: mbam_web
   environment:
     - "PYTHONUNBUFFERED=1"
   volumes:
     - user-data:/app/static/files
     - assets-data:/app/cookiecutter_mbam/static/build
     - static-data:/app/cookiecutter_mbam/static
   command: bash -c "cp .docker_env .env && npm run build && flask db upgrade && flask run"
   depends_on:
     - jatos
   environment:
    CONFIG_NAME: 'docker'
    XNAT_HOST: ${XNAT_HOST}
    XNAT_USER: ${XNAT_USER}
    XNAT_PASSWORD: ${XNAT_PASSWORD}
    XNAT_PROJECT: ${XNAT_PROJECT}
    DOCKER_HOST: ${XNAT_DOCKER_HOST}
    DICOM_TO_NIFTI_TRANSFER_COMMAND_ID: ${DICOM_TO_NIFTI_TRANSFER_COMMAND_ID}
    CLOUDFRONT_PRIVATE_KEY: ${CLOUDFRONT_PRIVATE_KEY}
    AWS_KEY_ID: ${AWS_KEY_ID}
    AWS_SECRET_KEY: ${AWS_SECRET_KEY}
    AWS_S3_BUCKET: ${AWS_S3_BUCKET}

 jatos:
   restart: always
   build: ./jatos
   expose:
    - "9000"
   volumes:
    - jatos-data:/opt/docker
   # env_file:
   #  - .env

 nginx:
   restart: always
   build:
     context: ./nginx
     args:
       - NGINX_CONFIG_FILE=${NGINX_CONFIG_FILE}
   ports:
     - "80:80"
     - "443:443"
   volumes:
     - user-data:/app/static/files
     - assets-data:/app/cookiecutter_mbam/static/build
     - static-data:/app/cookiecutter_mbam/static
   depends_on:
     - web

 redis:
   image: 'redis:5.0.3-alpine'
   command: redis-server
   volumes:
    - 'redis-data:/data'
   ports:
    - '6379:6379'

 celery:
   image: mbam_web
   command: bash -c "celery -A cookiecutter_mbam.run_celery:celery worker --loglevel info"
   volumes:
     - user-data:/app/static/files
   links:
    - redis
   environment:
    CONFIG_NAME: 'docker'
    XNAT_HOST: ${XNAT_HOST}
    XNAT_USER: ${XNAT_USER}
    XNAT_PASSWORD: ${XNAT_PASSWORD}
    XNAT_PROJECT: ${XNAT_PROJECT}
    DOCKER_HOST: ${XNAT_DOCKER_HOST}
    DICOM_TO_NIFTI_TRANSFER_COMMAND_ID: ${DICOM_TO_NIFTI_TRANSFER_COMMAND_ID}
    CLOUDFRONT_PRIVATE_KEY: ${CLOUDFRONT_PRIVATE_KEY}
    AWS_KEY_ID: ${AWS_KEY_ID}
    AWS_SECRET_KEY: ${AWS_SECRET_KEY}
    AWS_S3_BUCKET: ${AWS_S3_BUCKET}

volumes:
  jatos-data:
  user-data:
  assets-data:
  redis-data:
  static-data:
