# Define the parameters for a specific virtual host/server
server {
   # Define the directory where the contents being requested are stored
   # root /usr/src/app/project/;
 
   # Define the default page that will be served If no page was requested
   # (ie. if www.kennedyfamilyrecipes.com is requested)
   # index index.html;
 
   # Define the server name, IP address, and/or port of the server
   #listen 80;
   listen 443 ssl;
   server_name mybrainandme.org www.mybrainandme.org;
   ssl_certificate /etc/letsencrypt/live/www.mybrainandme.org/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/www.mybrainandme.org/privkey.pem;
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_prefer_server_ciphers on;
   ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
   root   /usr/src/app/flask_brain_db;
   index  index.html index.htm;
   error_page  404              /404.html;

   # server_name xxx.yyy.zzz.aaa
 
   # Define the specified charset to the “Content-Type” response header field
   charset utf-8;
 
   # Configure NGINX to deliver static content from the specified folder
   location /static {
       alias /usr/src/app/flask_brain_db/static;
   }
 
   # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
   location / {
       # Define the location of the proxy server to send the request to
       # simply include name of container running Gunicorn
       proxy_pass http://web:8000;
 
       # Redefine the header fields that NGINX sends to the upstream server
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
       # Define the maximum file size on file uploads
       client_max_body_size 50M;
   }

   location /jatos {
	rewrite ^/jatos(.*) /$1 break;
	proxy_pass	http://jatos-backend;
   }


    # websocket location (JATOS' group channel)
    location ~ "^/publix/[\d]+/group/join" {
    proxy_pass              http://jatos-backend;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection $connection_upgrade;
    proxy_read_timeout      3600; # keep open even without any transmission
    }

}

# redirect http to https
server {
   listen 80 default_server;
   listen [::]:80 default_server;
   server_name	mybrainandme.org www.mybrainandme.org;
   return 301 https://server_name$request_uri;
}

